<!DOCTYPE html>
<html><head><meta charset="utf-8"/><title>Sir Pelliton</title><link href="//fonts.googleapis.com/css?family=Noto+Sans:400,700,400italic,700italic" rel="stylesheet" type="text/css"/><link href="//fonts.googleapis.com/css?family=Libre+Baskerville:700" rel="stylesheet" type="text/css"/><style>
    body {
      margin: 0;
    }

    stat-block {
      /* A bit of margin for presentation purposes, to show off the drop
      shadow. */
      margin-left: 20px;
      margin-top: 20px;
    }
  </style><script>function createCustomElement(name, contentNode, elementClass = null) {
  if(elementClass === null) {
    customElements.define(name,
      class extends HTMLElement {
        constructor() {
          super();
          this.attachShadow({mode: 'open'})
            .appendChild(contentNode.cloneNode(true));
        }
      }
    )
  } else {
    customElements.define(name, elementClass(contentNode));
  }
}
</script></head><body><template id="stat-block"><style>
  .bar {
    height: 5px;
    background: #E69A28;
    border: 1px solid #000;
    position: relative;
    z-index: 1;
  }

  :host {
    display: inline-block;
  }

  #content-wrap {
    font-family: 'Noto Sans', 'Myriad Pro', Calibri, Helvetica, Arial,
                  sans-serif;
    font-size: 13.5px;
    background: #FDF1DC;
    padding: 0.6em;
    padding-bottom: 0.5em;
    border: 1px #DDD solid;
    box-shadow: 0 0 1.5em #867453;

    /* We don't want the box-shadow in front of the bar divs. */
    position: relative;
    z-index: 0;

    /* Leaving room for the two bars to protrude outwards */
    margin-left: 2px;
    margin-right: 2px;

    /* This is possibly overriden by next CSS rule. */
    width: 400px;

    -webkit-columns: 400px;
       -moz-columns: 400px;
            columns: 400px;
    -webkit-column-gap: 40px;
       -moz-column-gap: 40px;
            column-gap: 40px;

    /* We can't use CSS3 attr() here because no browser currently supports it,
       but we can use a CSS custom property instead. */
    height: var(--data-content-height);

    /* When height is constrained, we want sequential filling of columns. */
    -webkit-column-fill: auto;
       -moz-column-fill: auto;
            column-fill: auto;
  }

  :host([data-two-column]) #content-wrap {
    /* One column is 400px and the gap between them is 40px. */
    width: 840px;
  }

  ::slotted(h3) {
    border-bottom: 1px solid #7A200D;
    color: #7A200D;
    font-size: 21px;
    font-variant: small-caps;
    font-weight: normal;
    letter-spacing: 1px;
    margin: 0;
    margin-bottom: 0.3em;

    break-inside: avoid-column;
    break-after: avoid-column;
  }

  /* For user-level p elems. */
  ::slotted(p) {
    margin-top: 0.3em;
    margin-bottom: 0.9em;
    line-height: 1.5;
  }

  /* Last child shouldn't have bottom margin, too much white space. */
  ::slotted(*:last-child) {
    margin-bottom: 0;
  }
</style><div class="bar"></div><div id="content-wrap">
  <slot></slot>
</div><div class="bar"></div></template><script>{
  let templateElement = document.getElementById('stat-block');
  createCustomElement('stat-block', templateElement.content);
}</script><template id="creature-heading"><style>
  ::slotted(h1) {
    font-family: 'Libre Baskerville', 'Lora', 'Calisto MT',
                 'Bookman Old Style', Bookman, 'Goudy Old Style',
                 Garamond, 'Hoefler Text', 'Bitstream Charter',
                 Georgia, serif;
    color: #7A200D;
    font-weight: 700;
    margin: 0px;
    font-size: 23px;
    letter-spacing: 1px;
    font-variant: small-caps;
  }

  ::slotted(h2) {
    font-weight: normal;
    font-style: italic;
    font-size: 12px;
    margin: 0;
  }
</style><slot></slot></template><script>{
  let templateElement = document.getElementById('creature-heading');
  createCustomElement('creature-heading', templateElement.content);
}</script><template id="tapered-rule"><style>
  svg {
    fill: #922610;
    /* Stroke is necessary for good antialiasing in Chrome. */
    stroke: #922610;
    margin-top: 0.6em;
    margin-bottom: 0.35em;
  }
</style><svg height="5" width="400">
  <polyline points="0,0 400,2.5 0,5"></polyline>
</svg></template><script>{
  let templateElement = document.getElementById('tapered-rule');
  createCustomElement('tapered-rule', templateElement.content);
}</script><template id="top-stats"><style>
  ::slotted(*) {
    color: #7A200D;
  }
</style><tapered-rule></tapered-rule><slot></slot><tapered-rule></tapered-rule></template><script>{
  let templateElement = document.getElementById('top-stats');
  createCustomElement('top-stats', templateElement.content);
}</script><template id="abilities-block"><style>
  table {
    width: 100%;
    border: 0px;
    border-collapse: collapse;
  }
  th, td {
    width: 50px;
    text-align: center;
  }
</style><tapered-rule></tapered-rule><table>
  <tbody><tr>
    <th>STR</th>
    <th>DEX</th>
    <th>CON</th>
    <th>INT</th>
    <th>WIS</th>
    <th>CHA</th>
  </tr>
  <tr>
    <td id="str"></td>
    <td id="dex"></td>
    <td id="con"></td>
    <td id="int"></td>
    <td id="wis"></td>
    <td id="cha"></td>
  </tr>
</tbody></table><tapered-rule></tapered-rule></template><script>{
  function abilityModifier(abilityScore) {
  let score = parseInt(abilityScore, 10);
  return Math.floor((score - 10) / 2);
}

function formattedModifier(abilityModifier) {
  if (abilityModifier >= 0) {
    return '+' + abilityModifier;
  }
  // This is an en dash, NOT a "normal" dash. The minus sign needs to be more
  // visible.
  return 'â€“' + Math.abs(abilityModifier);
}

function abilityText(abilityScore) {
  return [String(abilityScore),
          ' (',
          formattedModifier(abilityModifier(abilityScore)),
          ')'].join('');
}

function elementClass(contentNode) {
  return class extends HTMLElement {
    constructor() {
      super();
      this.attachShadow({mode: 'open'})
        .appendChild(contentNode.cloneNode(true));
    }
    connectedCallback() {
      let root = this.shadowRoot;
      for (let i = 0; i < this.attributes.length; i++) {
        let attribute = this.attributes[i];
        let abilityShortName = attribute.name.split('-')[1];
        root.getElementById(abilityShortName).textContent =
           abilityText(attribute.value);
      }
    }
  }
}

  let templateElement = document.getElementById('abilities-block');
  createCustomElement('abilities-block', templateElement.content, elementClass);
}</script><template id="property-line"><style>
  :host {
    line-height: 1.4;
    display: block;
    text-indent: -1em;
    padding-left: 1em;
  }

  ::slotted(h4) {
    margin: 0;
    display: inline;
    font-weight: bold;
  }

  ::slotted(p:first-of-type) {
    display: inline;
    text-indent: 0;
  }

  ::slotted(p) {
    text-indent: 1em;
    margin: 0;
  }
</style><slot></slot></template><script>{
  let templateElement = document.getElementById('property-line');
  createCustomElement('property-line', templateElement.content);
}</script><template id="property-block"><style>
  :host {
    margin-top: 0.3em;
    margin-bottom: 0.9em;
    line-height: 1.5;
    display: block;
  }

  ::slotted(h4) {
    margin: 0;
    display: inline;
    font-weight: bold;
    font-style: italic;
  }

  ::slotted(p:first-of-type) {
    display: inline;
    text-indent: 0;
  }

  ::slotted(p) {
    text-indent: 1em;
    margin: 0;
  }
</style><slot></slot></template><script>{
  let templateElement = document.getElementById('property-block');
  createCustomElement('property-block', templateElement.content);
}</script><stat-block>
    <creature-heading>
      <h1>Sir Pelliton</h1>
      <h2>Medium humanoid (human), chaotic evil</h2>
    </creature-heading>

    <top-stats>
      <property-line>
        <h4>Armor Class</h4>
        <p>20 (plate, shield)</p>
      </property-line>
      <property-line>
        <h4>Hit Points</h4>
        <p>76 (9d10 + 27)</p>
      </property-line>
      <property-line>
        <h4>Speed</h4>
        <p>30ft.</p>
      </property-line>

      <abilities-block data-cha="18" data-con="17" data-dex="8" data-int="13" data-str="18" data-wis="15"></abilities-block>

      <property-line>
        <h4>Saving Throws</h4>
        <p>Dex + 3, Int +5</p>
      </property-line>
	  <property-line>
        <h4>Skills</h4>
        <p>Animal Handling +6, Arcana +5, Intimidation +8</p>
      </property-line>
	  <property-line>
        <h4>Damage Resistances</h4>
        <p>cold, fire, lightning, psychic</p>
      </property-line>
	  <property-line>
        <h4>Condition Immunities</h4>
        <p>blinded, deafened</p>
      </property-line>
	  <property-line>
        <h4>Senses</h4>
        <p>passive Perception 12</p>
      </property-line>
      <property-line>
        <h4>Languages</h4>
        <p>Common</p>
      </property-line>
      <property-line>
        <h4>Challenge</h4>
        <p>5 (1800 XP)</p>
      </property-line>
    </top-stats>
	
	<property-block>
      <h4>Mounted Combatant.</h4>
      <p>While mounted, Sir Pelliton has advantage on melee attack rolls 
		against unmounted creatures that are smaller than his mount.</p>
    </property-block>
	
	<property-block>
      <h4>The Star Knight.</h4>
      <p>Sir Pelliton has resistance to cold, fire, lightning, and psychic damage
		as a sign of his pact, and cannot be blinded or deafened. His hellish rebuke
		does 20 damage (no roll) to enemies who fail their save.</p>
    </property-block>

    <h3>Actions</h3>

    <property-block>
      <h4>Multiattack.</h4>
      <p>Sir Pellition makes three melee attacks or makes two melee attacks and casts eldritch blast.</p>
    </property-block>

    <property-block>
      <h4>Frost Brand Longsword.</h4>
      <p><i>Melee Weapon Attack:</i> +8 to hit, reach 5 ft., one target.
        <i>Hit:</i> 8 (1d8 + 4) slashing damage plus 3 (1d6) cold damage.</p>
    </property-block>
	
	<property-block>
      <h4>Lance.</h4>
      <p><i>Melee Weapon Attack:</i> +8 to hit, reach 10 ft., one target.
        <i>Hit:</i> 10 (1d12 + 4) piercing damage.</p>
    </property-block>
	
	<property-block>
      <h4>Eldritch Blast (3 beams).</h4>
      <p><i>Ranged Spell Attack:</i> +8 to hit, range 120 ft., up to three targets.
        <i>Hit:</i> 5 (1d10) force damage per beam.</p>
    </property-block>
	
	<h3>Bonus Actions</h3>
	
	<property-block>
      <h4>Branding Smite - Recharge 6.</h4>
      <p>The next time Sir Pelliton hits a creature with a weapon attack this round,
		the weapon gleams with unholy radiance as he strikes. The attack deals an
		extra 6 (2d6) radiant damage on the target, which becomes visible if it's
		invisible, and the target sheds dim light in a 5-foot radius and can't become
		invisible until the beginning of Sir Pelliton's next turn.</p>
    </property-block>
	
	<h3>Reactions</h3>
	
	<property-block>
      <h4>Pick up the Slack!.</h4>
      <p>As a reaction, when a minion dies, issue a command to your other 
		minions. Those who can hear you gain a reaction they can use to 
		immediately take another movement.</p>
    </property-block>
	
	<property-block>
      <h4>Hellish Rebuke.</h4>
      <p>As a reaction, when Sir Pelliton takes damage, he points at the
		creature who damaged him and they are surrounded by hellish flames.
		The creature must make a DC16 Dexterity saving throw, taking 20 fire
		damage on a failed save, or 10 on a successful one.</p>
    </property-block>
	
	<property-block>
      <h4>Counterspell - Recharge 5,6.</h4>
      <p>As a reaction, when Sir Pelliton sees a creature within 60 feet cast a spell,
		he attempts to interrupt the casting. If the spell is 3rd level or lower, it
		fails and has no effect. If the spell is 4th level or higher, make a Charisma
		ability check. The DC is equal to 10 + the spell's level. On a success, the 
		creature's spell fails and has no effect.</p>
    </property-block>
	
	<h3>Villian Actions</h3>
	
	<property-block>
      <h4>Round 1 - Kneel.</h4>
      <p>Sir Pelliton casts Black Tentacles with the following changes: The duration
		is 24 hours, until the effect is dispelled, or until Sir Pelliton dismisses 
		it as a bonus action. This effect does not require concentration.</p>
    </property-block>
	
	<property-block>
      <h4>Round 2 - Get in Formation!.</h4>
      <p>Sir Pelliton commands his remaining minions to get in formation. All minions
		who can hear him can move up to their speed towards an enemy of their choice
		(default is nearest enemy).</p>
    </property-block>
	
	<property-block>
      <h4>Round 3 - Freeze.</h4>
      <p>A blast of air as cold as the void of space erupts from Sir Pelliton's hands. Each creature in a 60 foot cone must
		make a DC 16 Constitution saving throw. A creature takes 8d8 cold damage on a failed save, or half as much damage on
		a successful one. A creature killed by this spell becomes a frozen statue until it thaws..</p>
    </property-block>
	
  </stat-block></body></html>
